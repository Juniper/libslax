version 1.0;

ns xsl = "http://www.w3.org/1999/XSL/Transform";
ns axsl = "http://www.w3.org/1999/XSL/TransformAlias";
ns-alias axsl xsl;

output-method html {
    version "4.0";
}

decimal-format name {
    decimal-separator "char";
    grouping-separator "char";
    infinity "string";
    minus-sign "char";
    nan "string";
    percent "char";
    per-mille "char";
    zero-digit "char";
    digit "char";
    pattern-separator "char";
}

output-method html { /* or "xml" | "html" | "text" | qname-but-not-ncname */
    version "nmtoken";
    encoding "string";
    omit-xml-declaration "yes"; /* or "no" */
    standalone "yes"; /* or "no" */
    doctype-public "string";
    doctype-system "string";
    cdata-section-elements qname1 qname2 qname3;
    indent "yes"; /* Or  "no" */
    media-type "string";
}

var $two = "2";

key my-key {
    match div;
    value @id;
}

attribute-set one { }
attribute-set two {
    attribute thing {
	expr one;
    }
}

attribute-set foo {
    use-attribute-sets one two;
    attribute "test" _ a {
	expr "one" _ thing;
    }
    attribute "test" _ b {
	expr "another" _ thing;
    }
}

match doc {
    var $site = "test.net";
    <doc> {
	<mumble> {
	    <two> {
		number $two {
		    format "001";
		    /* language "en"; */
		    letter-value "alphabetic";  /* Unsupported in libxslt */
		    grouping-separator "/";
		    grouping-size 100;
		}
	    }

	    /*
	     * The following substatements of 'number' can only appear if
	     * there is no argument to the number statement.
	     */
	    <three> {


		number {
		    level any; /* or 'single' or 'any' */
		    from h1;
		    count h2 | h3 | h4;
		}
	    }
	}

	copy-node {
	    use-attribute-sets foo;
	    apply-templates @* | node();
	}

	for-each (*) {
	    sort size {
		data-type "text"; /* or "number" or qname-but-not-ncname */
		language "en";
		order "ascending"; /* or "descending" */
		case-order "upper-first"; /* or "lower-first" */
	    }
	    copy-node;
	}

	message "before";
	terminate one _ " is  good";
	die "too late";
	message "after";
    }
     <axsl:some-fancy-element> {
	 fallback {
	     message "not implemented";
	 }
     }
}
